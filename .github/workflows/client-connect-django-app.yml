name: ü§ñ ClientConnect Django Pipeline

on:
  push:
    branches:
      - main
      - stagging
    paths-ignore:
      - '*.md'
  pull_request:
    branches:
      - main
      - stagging
    paths-ignore:
      - '*.md'

jobs:
  build:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_DB: ${{ secrets.DB_NAME }}
          POSTGRES_USER: ${{ secrets.DB_USER }}
          POSTGRES_PASSWORD: ${{ secrets.DB_PASSWORD }}
        ports:
          - 5432:5432

      redis:  
        image: redis:latest
        ports:
          - 6379:6379

      rabbitmq:
        image: rabbitmq:3.8.2
        ports:
          - 5672:5672
          
    steps:
      - name: üöÄ Checkout Code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: üêç Set Up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: üì¶ Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: üîÑ Run Migrations
        env:
          SECRET_KEY: ${{ secrets.SECRET_KEY }}
          DEBUG: ${{ secrets.DEBUG }}
          ALLOWED_HOSTS: ${{ secrets.ALLOWED_HOSTS }}
          BACK_END_LOCAL_URL: ${{ secrets.BACK_END_LOCAL_URL }}
          DB_ENGINE: django.db.backends.postgresql
          DB_NAME: ${{ secrets.DB_NAME }}
          DB_USER: ${{ secrets.DB_USER }}
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
          DB_HOST: ${{ secrets.DB_HOST }}
          DB_PORT: ${{ secrets.DB_PORT }}
        run: |
          echo "Running migrations..."
          python manage.py migrate

      - name: üß™ Run Tests
        env:
          SECRET_KEY: ${{ secrets.SECRET_KEY }}
          DEBUG: ${{ secrets.DEBUG }}
          ALLOWED_HOSTS: ${{ secrets.ALLOWED_HOSTS }}
          BACK_END_LOCAL_URL: ${{ secrets.BACK_END_LOCAL_URL }}
          DB_ENGINE: django.db.backends.postgresql
          DB_NAME: ${{ secrets.DB_NAME }}
          DB_USER: ${{ secrets.DB_USER }}
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
          DB_HOST: ${{ secrets.DB_HOST }}
          DB_PORT: ${{ secrets.DB_PORT }}
          CELERY_BROKER_URL: amqp://guest:guest@localhost:5672//
          CELERY_RESULT_BACKEND: redis://localhost:6379/0
        run: |
          echo "Running tests..."
          python manage.py test
